# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET Pipeline 

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'

    - name: Setup Node
      run: npm i package.json

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - name: Decrypt appsettings.json
      run: ./decrypt_secret.sh
      env:
        LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}
    
    - name: Move appsettings.json 
      run: |
        mv $HOME/secrets/appsettings.json Neoflix/appsettings.json
#       cat Neoflix/appsettings.json

    - name: Decrypt Neo4j.cs
      run: ./decrypt_secret_2.sh
      env:
        LARGE_SECRET_PASSPHRASE_2: ${{ secrets.LARGE_SECRET_PASSPHRASE_2 }}

    - name: Move Neo4j.cs
      run: |
          mv $HOME/secretstwo/Neo4j.cs Neoflix/Neo4j.cs
#         cat Neoflix/Neo4j.cs
    
    - name: Decrypt Program.cs
      run: ./decrypt_secret_3.sh
      env:
        LARGE_SECRET_PASSPHRASE_3: ${{ secrets.LARGE_SECRET_PASSPHRASE_3 }}

    - name: Move Program.cs
      run: |
          mv $HOME/secretsthree/Program.cs Neoflix/Program.cs
          cat Neoflix/Program.cs

    - name: Install Driver
      run: dotnet add Neoflix package Neo4j.Driver

    - name: Restore
      run: dotnet restore

    - name: Build
      run: dotnet build

    - name: Test
      run: dotnet test --logger "console;verbosity=detailed" --filter "Neoflix.Challenges._01_ConnectToNeo4j"
